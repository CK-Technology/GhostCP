version: '3.8'

services:
  postgres-test:
    image: postgres:16
    environment:
      POSTGRES_USER: ghostcp_test
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: ghostcp_test
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ghostcp_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis-test:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    volumes:
      - redis_test_data:/data

  # Mock DNS providers for testing
  mock-dns:
    image: nginx:alpine
    ports:
      - "8081:80"
    volumes:
      - ./tests/fixtures/mock-dns:/usr/share/nginx/html
    command: >
      sh -c "echo 'server {
        listen 80;
        location /cloudflare/ { return 200 \"{\\\"success\\\": true}\"; }
        location /powerdns/ { return 200 \"{\\\"rrsets\\\": []}\"; }
      }' > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  # Test runner service
  ghostcp-test:
    build:
      context: .
      dockerfile: api/Dockerfile.test
    environment:
      DATABASE_URL: postgresql://ghostcp_test:test_password@postgres-test:5432/ghostcp_test
      REDIS_URL: redis://redis-test:6379
      RUST_LOG: debug
      TEST_MODE: "true"
      MOCK_DNS_URL: "http://mock-dns"
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_started
      mock-dns:
        condition: service_started
    volumes:
      - ./api:/app/api
      - ./tests:/app/tests
      - ./target:/app/target
    working_dir: /app
    command: cargo test --workspace

volumes:
  postgres_test_data:
  redis_test_data:
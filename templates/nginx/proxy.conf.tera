# {{ site.domain }} - Proxy Site - Generated by GhostCP
# Template: proxy
# Generated: {{ now() | date(format="%Y-%m-%d %H:%M:%S") }}

{% if site.ssl_enabled and site.ssl_force %}
# HTTP redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name {{ site.domain }}{% if site.www_alias %} www.{{ site.domain }}{% endif %}{% for alias in site.aliases %} {{ alias }}{% endfor %};
    
    # ACME challenge location for Let's Encrypt
    location ^~ /.well-known/acme-challenge/ {
        root {{ site.document_root }};
        try_files $uri =404;
    }
    
    # Redirect all other requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}
{% endif %}

# Main proxy server block
server {
    {% if site.ssl_enabled %}
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    {% else %}
    listen 80;
    listen [::]:80;
    {% endif %}
    
    server_name {{ site.domain }}{% if site.www_alias %} www.{{ site.domain }}{% endif %}{% for alias in site.aliases %} {{ alias }}{% endfor %};
    
    {% if site.ssl_enabled %}
    # SSL Configuration
    ssl_certificate {{ site.ssl_cert_path }};
    ssl_certificate_key {{ site.ssl_key_path }};
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    {% if site.ssl_hsts %}
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {% endif %}
    {% endif %}
    
    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Proxy settings
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;
    proxy_temp_file_write_size 256k;
    proxy_max_temp_file_size 0;
    
    # Timeout settings
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;
    
    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $server_name;
    proxy_set_header X-Forwarded-Port $server_port;
    
    # Additional custom proxy headers
    {% for header, value in site.proxy_headers %}
    proxy_set_header {{ header }} {{ value }};
    {% endfor %}
    
    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection $connection_upgrade;
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    
    {% if site.basic_auth_enabled and site.basic_auth_file %}
    # Basic authentication
    auth_basic "Restricted Access";
    auth_basic_user_file {{ site.basic_auth_file }};
    {% endif %}
    
    # Main proxy location
    location / {
        {% if site.rate_limiting.location %}
        # Rate limiting
        limit_req zone={{ site.rate_limiting.zone | default(value="default") }} burst={{ site.rate_limiting.burst | default(value="10") }} nodelay;
        {% endif %}
        
        proxy_pass {{ site.proxy_pass }};
        
        # Error handling
        proxy_intercept_errors on;
        error_page 500 502 503 504 /50x.html;
    }
    
    # Handle 50x errors
    location = /50x.html {
        root /usr/share/nginx/html;
    }
    
    # Health check endpoint (bypass auth if enabled)
    location /health {
        {% if site.basic_auth_enabled %}
        auth_basic off;
        {% endif %}
        proxy_pass {{ site.proxy_pass }}/health;
    }
    
    # Static assets bypass (optional)
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        proxy_pass {{ site.proxy_pass }};
    }
    
    # ACME challenge location for Let's Encrypt
    location ~ /.well-known/acme-challenge/ {
        allow all;
        root {{ site.document_root }};
    }
    
    {% for include_file in site.custom_includes %}
    include {{ include_file }};
    {% endfor %}
    
    {% if site.custom_config %}
    # Custom configuration
    {{ site.custom_config }}
    {% endif %}
    
    # Logging
    access_log /var/log/nginx/{{ site.domain }}.access.log;
    error_log /var/log/nginx/{{ site.domain }}.error.log warn;
}
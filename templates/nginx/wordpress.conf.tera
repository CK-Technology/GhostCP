# {{ site.domain }} - WordPress Site - Generated by GhostCP
# Template: wordpress{% if site.is_wp_multisite %}-multisite-{{ site.wp_multisite_type | default(value="subdomain") }}{% endif %}
# Generated: {{ now() | date(format="%Y-%m-%d %H:%M:%S") }}

{% if site.ssl_enabled and site.ssl_force %}
# HTTP redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name {{ site.domain }}{% if site.www_alias %} www.{{ site.domain }}{% endif %}{% for alias in site.aliases %} {{ alias }}{% endfor %};
    
    # ACME challenge location for Let's Encrypt
    location ^~ /.well-known/acme-challenge/ {
        root {{ site.document_root }};
        try_files $uri =404;
    }
    
    # Redirect all other requests to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}
{% endif %}

# Main WordPress server block
server {
    {% if site.ssl_enabled %}
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    {% else %}
    listen 80;
    listen [::]:80;
    {% endif %}
    
    server_name {{ site.domain }}{% if site.www_alias %} www.{{ site.domain }}{% endif %}{% for alias in site.aliases %} {{ alias }}{% endfor %};
    
    root {{ site.document_root }};
    index index.php index.html;
    
    {% if site.ssl_enabled %}
    # SSL Configuration
    ssl_certificate {{ site.ssl_cert_path }};
    ssl_certificate_key {{ site.ssl_key_path }};
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    {% if site.ssl_hsts %}
    
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {% endif %}
    {% endif %}
    
    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;
    
    {% if site.fastcgi_cache_enabled %}
    # FastCGI cache settings
    set $skip_cache 0;
    
    # POST requests and URLs with query string should always go to PHP
    if ($request_method = POST) {
        set $skip_cache 1;
    }
    if ($query_string != "") {
        set $skip_cache 1;
    }
    
    # Don't cache URLs containing the following segments
    if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php|sitemap(_index)?.xml") {
        set $skip_cache 1;
    }
    
    # Don't use the cache for logged-in users or recent commenters
    if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass|wordpress_logged_in") {
        set $skip_cache 1;
    }
    {% endif %}
    
    # WordPress security - Block access to sensitive files
    location ~ /\.(ht|env|git) {
        deny all;
        return 404;
    }
    
    # Block access to wp-config and other sensitive files
    location ~* /(wp-config\.php|readme\.html|license\.txt|changelog\.txt) {
        deny all;
        return 404;
    }
    
    # Block access to uploads PHP files
    location ~* /(?:uploads|files)/.*\.php$ {
        deny all;
        return 404;
    }
    
    # WordPress: allow TinyMCE
    location = /wp-includes/js/tinymce/wp-tinymce.php {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:{{ site.php_fpm_socket }};
    }
    
    # WordPress: deny wp-content, wp-includes php files
    location ~* ^/(?:wp-content|wp-includes)/.*\.php$ {
        deny all;
        return 404;
    }
    
    # WordPress: deny wp-content/uploads nasty stuff
    location ~* ^/wp-content/uploads/.*\.(php|pl|py|jsp|asp|sh|cgi)$ {
        deny all;
        return 404;
    }
    
    # WordPress: deny scripts and styles concat
    location ~* \/wp-admin\/load-(?:scripts|styles)\.php {
        deny all;
        return 404;
    }
    
    # WordPress: deny general stuff
    location ~* ^/(?:xmlrpc\.php|wp-links-opml\.php|wp-config\.php|wp-config-sample\.php|readme\.html|license\.txt)$ {
        deny all;
        return 404;
    }
    
    {% if site.is_wp_multisite %}
    # WordPress Multisite configuration
    {% if site.wp_multisite_type == "subdirectory" %}
    # Subdirectory multisite
    if (!-e $request_filename) {
        rewrite /wp-admin$ $scheme://$host$request_uri/ permanent;
        rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) $1 last;
        rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ $1 last;
    }
    {% endif %}
    
    # Multisite files handling
    location ~ ^/files/(.+) {
        try_files /wp-content/blogs.dir/$blogid/files/$1 /wp-includes/ms-files.php?file=$1 ;
        access_log off;
        log_not_found off;
        expires max;
    }
    {% endif %}
    
    # Static files
    location ~* \.(ogg|ogv|svg|svgz|eot|otf|woff|woff2|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
    }
    
    # CSS and JavaScript
    location ~* \.(css|js)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        log_not_found off;
    }
    
    # PHP files handling
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:{{ site.php_fpm_socket }};
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Security
        fastcgi_hide_header X-Powered-By;
        
        {% if site.fastcgi_cache_enabled %}
        # FastCGI caching
        fastcgi_cache {{ site.domain | domain_hash }};
        fastcgi_cache_valid 200 60m;
        fastcgi_cache_use_stale error timeout invalid_header http_500;
        fastcgi_cache_bypass $skip_cache;
        fastcgi_no_cache $skip_cache;
        add_header X-FastCGI-Cache $upstream_cache_status;
        {% endif %}
    }
    
    # Main location - WordPress pretty permalinks
    location / {
        try_files $uri $uri/ /index.php?$args;
        
        {% if site.basic_auth_enabled and site.basic_auth_file %}
        # Basic authentication (bypass for wp-cron and xmlrpc)
        location ~ ^/(wp-cron\.php|xmlrpc\.php) {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:{{ site.php_fpm_socket }};
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
        }
        
        auth_basic "WordPress Admin";
        auth_basic_user_file {{ site.basic_auth_file }};
        {% endif %}
    }
    
    # WordPress admin and login - always bypass cache
    location ~* ^/(wp-admin|wp-login\.php) {
        {% if site.basic_auth_enabled and site.basic_auth_file %}
        auth_basic "WordPress Admin";
        auth_basic_user_file {{ site.basic_auth_file }};
        {% endif %}
        
        location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:{{ site.php_fpm_socket }};
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_cache_bypass 1;
            fastcgi_no_cache 1;
        }
    }
    
    # ACME challenge location for Let's Encrypt
    location ~ /.well-known/acme-challenge/ {
        allow all;
        root {{ site.document_root }};
    }
    
    {% for include_file in site.custom_includes %}
    include {{ include_file }};
    {% endfor %}
    
    {% if site.custom_config %}
    # Custom configuration
    {{ site.custom_config }}
    {% endif %}
    
    # Logging
    access_log /var/log/nginx/{{ site.domain }}.access.log;
    error_log /var/log/nginx/{{ site.domain }}.error.log warn;
}
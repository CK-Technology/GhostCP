# Virtual Host Configuration for {{ config.domain }}
# Generated on {{ timestamp }}
# GhostCP NGINX Template

{% if config.rate_limiting %}
limit_req_zone $binary_remote_addr zone={{ config.rate_limiting.zone_name }}:10m rate={{ config.rate_limiting.requests_per_second }}r/s;
{% endif %}

# HTTP Server Block
server {
    listen {{ config.ip_address }}:80;
    {% if config.ipv6_address %}
    listen [{{ config.ipv6_address }}]:80;
    {% endif %}

    server_name {{ config.domain }}{% for alias in config.aliases %} {{ alias }}{% endfor %};

    {% if config.ssl_enabled and config.ssl_force %}
    # Force HTTPS redirect
    location / {
        return 301 https://$host$request_uri;
    }

    # ACME challenge location
    location /.well-known/acme-challenge/ {
        root {{ config.document_root }};
        try_files $uri =404;
    }
    {% else %}
    # Document root and index
    root {{ config.document_root }};
    index index.php index.html index.htm;

    {% if config.rate_limiting %}
    limit_req zone={{ config.rate_limiting.zone_name }} burst={{ config.rate_limiting.burst }} nodelay;
    {% endif %}

    # Security headers
    {% if config.security_headers %}
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    {% endif %}

    # PHP handling
    {% if config.php_enabled %}
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php{{ config.php_version }}-fpm-{{ config.php_pool }}.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;

        # Security
        fastcgi_param HTTP_PROXY "";
        fastcgi_hide_header X-Powered-By;
    }
    {% endif %}

    # Static file handling
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        {% if config.gzip_enabled %}
        gzip_static on;
        {% endif %}
    }

    # Security rules
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Basic auth
    {% if config.basic_auth %}
    auth_basic "{{ config.basic_auth.realm }}";
    auth_basic_user_file {{ config.basic_auth.auth_file }};
    {% endif %}

    # Main location block
    location / {
        try_files $uri $uri/ =404;
    }

    # Custom configuration
    {% if config.custom_config %}
    {{ config.custom_config }}
    {% endif %}
    {% endif %}

    # Logging
    access_log {{ config.access_log }};
    error_log {{ config.error_log }};
}

{% if config.ssl_enabled %}
# HTTPS Server Block
server {
    listen {{ config.ip_address }}:443 ssl http2;
    {% if config.ipv6_address %}
    listen [{{ config.ipv6_address }}]:443 ssl http2;
    {% endif %}

    server_name {{ config.domain }}{% for alias in config.aliases %} {{ alias }}{% endfor %};

    # SSL Configuration
    ssl_certificate {{ config.ssl_certificate }};
    ssl_certificate_key {{ config.ssl_certificate_key }};

    # SSL Security
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    {% if config.ssl_hsts %}
    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {% endif %}

    # Document root and index
    root {{ config.document_root }};
    index index.php index.html index.htm;

    {% if config.rate_limiting %}
    limit_req zone={{ config.rate_limiting.zone_name }} burst={{ config.rate_limiting.burst }} nodelay;
    {% endif %}

    # Security headers
    {% if config.security_headers %}
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    {% endif %}

    # PHP handling
    {% if config.php_enabled %}
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass unix:/var/run/php/php{{ config.php_version }}-fpm-{{ config.php_pool }}.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param HTTPS on;
        include fastcgi_params;

        # Security
        fastcgi_param HTTP_PROXY "";
        fastcgi_hide_header X-Powered-By;
    }
    {% endif %}

    # Static file handling
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        {% if config.gzip_enabled %}
        gzip_static on;
        {% endif %}
    }

    # Security rules
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Basic auth
    {% if config.basic_auth %}
    auth_basic "{{ config.basic_auth.realm }}";
    auth_basic_user_file {{ config.basic_auth.auth_file }};
    {% endif %}

    # Main location block
    location / {
        try_files $uri $uri/ =404;
    }

    # Custom configuration
    {% if config.custom_config %}
    {{ config.custom_config }}
    {% endif %}

    # Logging
    access_log {{ config.access_log }};
    error_log {{ config.error_log }};
}
{% endif %}